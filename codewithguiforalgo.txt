function varargout = rajeshocr(varargin)
% RAJESHOCR MATLAB code for rajeshocr.fig
%      RAJESHOCR, by itself, creates a new RAJESHOCR or raises the existing
%      singleton*.
%
%      H = RAJESHOCR returns the handle to a new RAJESHOCR or the handle to
%      the existing singleton*.
%
%      RAJESHOCR('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in RAJESHOCR.M with the given input arguments.
%
%      RAJESHOCR('Property','Value',...) creates a new RAJESHOCR or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before rajeshocr_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to rajeshocr_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help rajeshocr

% Last Modified by GUIDE v2.5 26-Apr-2019 04:10:25

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @rajeshocr_OpeningFcn, ...
                   'gui_OutputFcn',  @rajeshocr_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before rajeshocr is made visible.
function rajeshocr_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to rajeshocr (see VARARGIN)

% Choose default command line output for rajeshocr
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes rajeshocr wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = rajeshocr_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
%%

clear all 
clc ;
%[file,path] = uigetfile('*.m');
[file,path] = uigetfile('*.*');
if isequal(file,0)
   disp('User selected Cancel');
else
   disp(['User selected ', fullfile(path,file)]);
end



I = imread(fullfile(path,file));
figure; imshow(I); title('Original Image')

colorImage = imgaussfilt(I,[8 8]);
%colorImage = imgaussfilt(I,0.6);

figure; imshow(colorImage); title('Gausian Filtered Image(Original Image after blurring)')

grayImage = rgb2gray(colorImage);
figure
imshow(grayImage);title('Black And White(Gray Image)');
mserRegions = detectMSERFeatures(grayImage,'RegionAreaRange',[400 8000]);
mserRegionsPixels = vertcat(cell2mat(mserRegions.PixelList));  % extract regions
figure; imshow(colorImage); hold on;
plot(mserRegions, 'showPixelList', true,'showEllipses',false);
title('MSER Regions');
mserMask = false(size(grayImage));
ind = sub2ind(size(mserMask), mserRegionsPixels(:,2), mserRegionsPixels(:,1));
mserMask(ind) = true;
edgeMask = edge(grayImage, 'Sobel');
edgeAndMSERIntersection = edgeMask & mserMask; 
figure; imshowpair(edgeMask, edgeAndMSERIntersection, 'montage'); 
title('Sobel edges and Intersection of Sobel edges with MSER regions')
figure
BWnobord = imclearborder(edgeAndMSERIntersection,4);
imshow(BWnobord)
title('Cleared Border Image')
figure
se90 = strel('line',3,90);
se0 = strel('line',3,0);
BWsdil = imdilate(edgeAndMSERIntersection,[se90 se0]);
imshow(BWsdil)
title('Dilated Gradient Mask')
figure
BWdfill = imfill(BWsdil,'holes');
imshow(BWdfill);
title('Binary Image with Filled Holes')
st = regionprops(BWdfill, 'BoundingBox', 'Area' );
t = st(1).BoundingBox;
xmin = t(1);
ymin = t(2);
xmax = t(3);
ymax = t(4);
for k = 2 : length(st)
  thisBB = st(k).BoundingBox;
  x1 = thisBB(1);
  y1 = thisBB(2);
  x2 = x1 + thisBB(3);
  y2 = y1 + thisBB(4);
  if x1 < xmin
       xmin = x1;
  end
  if y1 < ymin
      ymin = y1;
  end
  if x2 > xmax
      xmax = x2;
  end
  if y2 > ymax
      ymax = y2;
  end
end
boundary = [xmin,ymin,xmax-xmin,ymax-ymin];
figure
imshow(I);
title('Original Image with Recognized Text Area ');
rectangle('Position',boundary ,'EdgeColor','r','LineWidth',2 )
results = ocr(I,boundary);
msgbox(results.Text,'Extracted Text from Image','success');
     

%%


% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

%set(handles.edit1,'String','HELLO');
%set(handles.text2,'String','hiiii');

  %str = inputdlg('Enter numbers (seperated by commas)');         
  %num = str2num(str{1});    
  %a=num(:,1);    
  %b=num(:,2);    
  %ans = a+b; %or whatever you want to do!    
  %caption = sprintf('your answer is %.2f',ans);    
  %set(handles.text6,'string',caption);     
     






% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)




% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)




% --- Executes on button press in pushbutton5.
function pushbutton5_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)






% --- Executes on button press in pushbutton6.
function pushbutton6_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)



function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton7.
function pushbutton7_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

clc;





% --- Executes on button press in pushbutton8.
function pushbutton8_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Clear the command window
clc;
% Delete the figure
delete(handles.figure1);


% --- If Enable == 'on', executes on mouse press in 5 pixel border.
% --- Otherwise, executes on mouse press in 5 pixel border or over edit1.
function edit1_ButtonDownFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton9.
function pushbutton9_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton9 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

%Recognize Text Using Optical Character Recognition (OCR)
%----------------------------------------------------------------------------
%Text Recognition Using the ocr Function
%--------------------------------------------------------------------------

% Load an image.
clear;
clc;
%[file,path] = uigetfile('*.m');
[file,path] = uigetfile('*.*');
if isequal(file,0)
   disp('User selected Cancel');
else
   disp(['User selected ', fullfile(path,file)]);
end



I = imread(fullfile(path,file));
figure
imshow(I);



% Perform OCR.
results = ocr(I);
a = results.Text ;
%f = msgbox(a,'Extracted Text');
f = msgbox({a});
%set(handles.text6,'String %d',a);  

%set(handles.text6,'String',a);

 
 
 %x=str2double(get(handles.edit1,'String'));
%set(handle.Operation,'String',a);


% --- Executes during object creation, after setting all properties.
function text6_CreateFcn(hObject, eventdata, handles)
% hObject    handle to text6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called


% --- Executes on button press in pushbutton10.
function pushbutton10_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton10 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

%about app
h = msgbox('|| Developer : Rajesh Kumar || B.Tech(CSE) IIIT Manipur || OCR version : 1.0.0||','About');


% --- Executes on button press in pushbutton11.
function pushbutton11_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton11 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

%Contact about developer
h = msgbox('EMail : rajesh.k@iiitmanipur.ac.in , PhoneNo. : +918259952348 , Address : IIIT Manipur Mantripukhari Imphal 795002 Manipur','Contact');


% --- Executes on button press in pushbutton12.
function pushbutton12_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton12 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton13.
function pushbutton13_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton13 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton14.
function pushbutton14_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton14 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton15.
function pushbutton15_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton15 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton16.
function pushbutton16_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton16 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton17.
function pushbutton17_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton17 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
